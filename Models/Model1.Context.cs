//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MV_P1.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class PDcontext : DbContext
    {
        public PDcontext()
            : base("name=PDcontext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<tbl_TipoParkinson> tbl_TipoParkinson { get; set; }
        public DbSet<tbl_ImagenesPacientes> tbl_ImagenesPacientes { get; set; }
        public DbSet<tbl_Pacientes> tbl_Pacientes { get; set; }
    
        public virtual ObjectResult<sp_ObtenerImagenes_Result> sp_ObtenerImagenes(Nullable<int> idPaciente)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("idPaciente", idPaciente) :
                new ObjectParameter("idPaciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerImagenes_Result>("sp_ObtenerImagenes", idPacienteParameter);
        }
    
        public virtual ObjectResult<sp_ObtenerImagenes_V2_Result> sp_ObtenerImagenes_V2(Nullable<int> idPaciente)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("idPaciente", idPaciente) :
                new ObjectParameter("idPaciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerImagenes_V2_Result>("sp_ObtenerImagenes_V2", idPacienteParameter);
        }
    
        public virtual ObjectResult<sp_ObtenerImagenes_V3_Result> sp_ObtenerImagenes_V3(Nullable<int> idPaciente)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("idPaciente", idPaciente) :
                new ObjectParameter("idPaciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerImagenes_V3_Result>("sp_ObtenerImagenes_V3", idPacienteParameter);
        }
    }
}
